"""
参考链接：https://www.zhihu.com/question/36081767/answer/65820705
"""
#!/usr/bin/env python
# -*- coding: utf-8 -*-
import binascii
import requests
import json
import os
import base64
from Crypto.Cipher import AES
from Crypto.PublicKey import RSA
from pprint import pprint


def aesEncrypt(text, secKey):
    pad = 16 - len(text) % 16
    text += pad * chr(pad)
    encryptor = AES.new(secKey, 2, '0102030405060708')
    ciphertext = encryptor.encrypt(text)
    ciphertext = base64.b64encode(ciphertext).decode()
    return ciphertext


# def rsaEncrypt(text, pubKey, modulus):
#     text = text[::-1]
#     rs = int(text.encode('hex'), 16)**int(pubKey, 16) % int(modulus, 16)
#     return format(rs, 'x').zfill(256)

def rsaEncrypt(text, pubKey, modulus):
    reverse_text = text[::-1]
    pubKey = RSA.construct([int(modulus, 16), int(pubKey, 16)])
    encrypt_text = pubKey.encrypt(int(binascii.hexlify(reverse_text.encode()), 16),None)[0]
    return format(encrypt_text, 'x').zfill(256)




"""
def a(length):
    x =  "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    result = ""
    for _ in range(length):
        index = random.randint(0, len(x) - 1)
        result += x[index]
    return result
print(a(16))
"""
def createSecretKey(size):
    return (''.join([hex(b)[2:] for b in os.urandom(size)]))[0:16]
    # x = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    # result = ""
    # for _ in range(size):
    #     index = random.randint(0, len(x) - 1)
    #     result += x[index]
    # return result


url = 'https://music.163.com/weapi/v1/resource/comments/R_SO_4_125507?csrf_token='
headers = {
    # 'Cookie': 'appver=1.5.0.75771;',
    'Referer': 'http://music.163.com/'
}
text = {
    'rid': 'R_SO_4_125507',
    "offset": 0,
    "total":"true",
    "limit":"1",
    "csrf_token":""
}

modulus = '00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7'
nonce = '0CoJUm6Qyw8W8jud'
pubKey = '010001'
text = json.dumps(text)
secKey = createSecretKey(16)
encText = aesEncrypt(aesEncrypt(text, nonce), secKey)
encSecKey = rsaEncrypt(secKey, pubKey, modulus)

data = {
    'params': encText,
    'encSecKey': encSecKey
}

# pprint(data)
req = requests.post(url, headers=headers, data=data)
pprint(req.json())
